---
apiVersion: operator.open-cluster-management.io/v1
kind: MultiClusterHub
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  name: multiclusterhub
  namespace: open-cluster-management
spec:
  # https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.1/html/install/installing
  # If using custom pull secrets
  #imagePullSecret: <secret>
  #
  # enable self managed cluster
  # This uses the "local-cluster" namespace
  disableHubSelfManagement: false
---
---
#
# Wait for multiclusterhub instance to be ready to continue
#
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "10"
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
  name: mch-wait-job
  # generateName: csv-wait-job-
  namespace: openshift-gitops
spec:
  template:
    spec:
      containers:
        - image: registry.redhat.io/openshift4/ose-cli:latest
          command:
            - /bin/bash
            - -c
            - |
              echo "ArgoCD PostSync Hook"
              CSV_STATUS="Pausing $SLEEP seconds..."
              while [ "$CSV_STATUS" != "Running" ]; do
                echo "Waiting for the multiclusterhub instance to be running. ($CSV_STATUS)"
                sleep $SLEEP
                CSV_STATUS=$( oc -n open-cluster-management get multiclusterhub multiclusterhub -o jsonpath={.status.phase} )
              done
              echo "All done! Hooray!"
          imagePullPolicy: IfNotPresent
          name: mch-wait-job
          env:
          - name: SLEEP
            value: "20"
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: cli-job-sa
      serviceAccountName: cli-job-sa
      terminationGracePeriodSeconds: 30
